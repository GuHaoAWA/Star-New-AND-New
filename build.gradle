buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = "https://repo.spongepowered.org/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
plugins {
    id 'eclipse'
    id 'maven-publish'

}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = '1.18.2-V2.0.0'
group = 'com.guhao.star' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'Star'+ "" + System.currentTimeSeconds()

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // official   MCVersion             Official field/method names from Mojang mapping files
    // parchment  YYYY.MM.DD-MCVersion  Open community-sourced parameter names and javadocs layered on top of official
    //
    // You must be aware of the Mojang license when using the 'official' or 'parchment' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Parchment is an unofficial project maintained by ParchmentMC, separate from MinecraftForge
    // Additional setup is needed to use their mappings: https://github.com/ParchmentMC/Parchment/wiki/Getting-Started
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: '1.18.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'starmod'

            mods {
                starmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'starmod'

            mods {
                starmod {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'starmod'

            mods {
                starmod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'starmod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                starmod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    flatDir {
        dir 'lib'
    }

    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven { // TOP
        url "https://cursemaven.com"
    }
    maven { //mirror
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }
        // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
}

dependencies {
    // Specify the version of Minecraft to use. If this is any group other than 'net.minecraft', it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency, and its patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.21'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    //implementation fg.deobf("libs:epicfight-18.5.24:EpicFight")
    implementation fg.deobf("libs:epicfight-forge-18.5.26-1.18.2-:EpicFight")
    implementation fg.deobf("libs:Tiered-1.18.2-4.1.2-Forge:EpicFight")
    implementation fg.deobf("libs:Jade-1.18.2-forge-5.2.6:EpicFight")
    implementation fg.deobf("libs:UnionLib-1.18.2-7.2.4-Forge:EpicFight")
    implementation fg.deobf("libs:ShoulderSurfing-Forge-1.18.2-2.4.1:Forge-1.18.2-2.4.1")
    implementation fg.deobf("libs:Mobifier-forge-1.18.2-1.0.3:forge-1.18.2-1.0.3")
    implementation fg.deobf("libs:epicacg-18.5.21.3.fix3:forge-1.18.2-1.0.3")
    implementation fg.deobf("libs:indestructible-18.5.14:forge-1.18.2-1.0.0")
    //implementation fg.deobf("libs:blue_skies-1.18.2-1.3.12:1.18.2-1.3.12")
    //implementation fg.deobf("libs:tick:tick")
    implementation fg.deobf("com.almostreliable.summoningrituals:summoningrituals:1.18.2-1.1.8")
    implementation fg.deobf("libs:structure_gel-1.18.2-2.4.7:1.18.2-2.4.7")
    implementation fg.deobf("libs:PlayerExReimagined-18.5.6:1.0")
    implementation fg.deobf("libs:falchionmoveset:1")
    implementation fg.deobf("libs:caelus-forge-1.18.1-3.0.0.2:18.5.3")
    implementation fg.deobf("libs:irons_spellbooks-1.18.2-1.1.4.2:1.1.4.2")
    implementation fg.deobf("libs:guhao-V1.0.1-all:1.0.0")
    implementation fg.deobf("libs:StellarisCraft-1.3.0:3.0.57")
    implementation fg.deobf("libs:geckolib-forge-1.18-3.0.57:3.0.57")
    implementation fg.deobf("top.theillusivec4.curios:curios-forge:1.18.2-5.0.9.1")
    implementation fg.deobf("libs:player-animation-lib-forge-1.0.2:1.0.2")
    implementation fg.deobf("libs:TickChanger-1.18.2-1.0:1.0")
    implementation fg.deobf("libs:Paxi-1.18.2-Forge-2.1.1:1.0")
    implementation fg.deobf("libs:YungsApi-1.18.2-Forge-2.2.9:1.0")
    implementation fg.deobf("libs:WeaponsOfMiracles-18.1.7.38:1.0.0.0")
    implementation fg.deobf("libs:WeaponThrow-1.18.2-5.7:1.0.0.0")
    implementation fg.deobf("libs:L_EndersCataclysm-0.51-hotfix-1.18.2:1.0.0.0")
    //implementation fg.deobf("libs:WeaponsOfMiracles-20.1.8.1:1.0.0.0")
    implementation fg.deobf("libs:citadel-1.11.3-1.18.2:1.0.0")
    implementation fg.deobf("libs:1.18.2-damage_number-1.3.1:1.0.0.0")
    implementation fg.deobf("libs:Rank-System-1.0:1.0")

    implementation fg.deobf("libs:mowziesmobs-1.6.3:1.0.0")

    implementation fg.deobf("libs:wukong_moveset-duel-forge1.18.2-18.0.1.12beta:1.1")
    implementation fg.deobf("libs:nanhealthfixer-1.18.2-0.0.1:1.1")
    implementation fg.deobf("libs:alexsmobs-1.18.6:1.0")
    implementation fg.deobf("libs:LowDragLib-1.18.2-1.0.8:1.0")
//    implementation fg.deobf("libs:stellarisdlc-1.0:1.0")

    // Real mod deobf dependency stars - these get remapped to your current mappings
    // compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api") // Adds JEI API as a compile dependency
    // runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}") // Adds the full JEI mod as a runtime dependency
    // implementation fg.deobf("com.tterrag.registrate:Registrate:MC${mc_version}-${registrate_version}") // Adds registrate as a dependency

    // stars using mod jars from ./libs
    // implementation fg.deobf("blank:coolmod-${mc_version}:${coolmod_version}")

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

// star for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "starmod",
                "Specification-Vendor"    : "starmodsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "starmodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "star.mixins.json"
        ])
    }
}

// star configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}


mixin {
    add sourceSets.main, "star.refmap.json"
}